openapi: 3.0.0
info:
  title: LTI Talent Tracking System API
  description: API para el sistema de seguimiento de talento de LTI
  version: 1.0.0
  contact:
    name: Equipo de desarrollo LTI
    email: development@lti.com

servers:
  - url: http://localhost:3010
    description: Servidor de desarrollo local

tags:
  - name: candidates
    description: Operaciones relacionadas con candidatos
  - name: positions
    description: Operaciones relacionadas con posiciones
  - name: upload
    description: Operaciones relacionadas con la carga de archivos

paths:
  /candidates:
    post:
      tags:
        - candidates
      summary: Crear un nuevo candidato
      description: Crea un nuevo candidato con su información personal, educación, experiencia laboral y CV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateInput'
      responses:
        '201':
          description: Candidato creado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Candidate added successfully
                  data:
                    $ref: '#/components/schemas/Candidate'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /candidates/{id}:
    get:
      tags:
        - candidates
      summary: Obtener un candidato por ID
      description: Devuelve la información detallada de un candidato específico
      parameters:
        - name: id
          in: path
          required: true
          description: ID del candidato
          schema:
            type: integer
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '404':
          description: Candidato no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /candidates/{id}/stage:
    put:
      tags:
        - candidates
      summary: Actualizar la etapa de un candidato
      description: |
        Actualiza la etapa actual de un candidato en el proceso de selección.
        Esta operación registra quién realizó el cambio y cuándo para fines de auditoría.
        No permite cambiar candidatos que ya estén en etapas finales como "Rechazado" o "Contratado".
      parameters:
        - name: id
          in: path
          required: true
          description: ID del candidato
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_interview_step
              properties:
                current_interview_step:
                  type: string
                  description: Nombre de la nueva etapa
                  example: "Oferta"
                modified_by_id:
                  type: integer
                  description: ID del empleado que realiza el cambio (para auditoría)
                  example: 1
      responses:
        '200':
          description: Etapa actualizada con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Etapa del candidato actualizada con éxito
                  data:
                    $ref: '#/components/schemas/Application'
        '400':
          description: Datos de entrada inválidos o operación no permitida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Candidato o etapa no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /positions/{id}/candidates:
    get:
      tags:
        - positions
      summary: Obtener candidatos por posición
      description: |
        Devuelve todos los candidatos asociados a una posición específica,
        incluyendo su nombre completo, etapa actual y promedio de puntuaciones de entrevistas.
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la posición
          schema:
            type: integer
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    full_name:
                      type: string
                      description: Nombre completo del candidato
                      example: John Doe
                    current_interview_step:
                      type: string
                      description: Etapa actual del proceso
                      example: Primera entrevista
                    average_score:
                      type: number
                      nullable: true
                      description: Promedio de puntuaciones de las entrevistas
                      example: 4.5
        '400':
          description: ID de posición inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Posición no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /upload:
    post:
      tags:
        - upload
      summary: Cargar un archivo
      description: Sube un archivo al servidor, como un CV
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Archivo cargado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  filePath:
                    type: string
                    example: uploads/1715760936750-cv.pdf
                  fileType:
                    type: string
                    example: application/pdf
        '400':
          description: Error al cargar el archivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CandidateInput:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          maxLength: 100
          example: John
        lastName:
          type: string
          maxLength: 100
          example: Doe
        email:
          type: string
          format: email
          maxLength: 255
          example: john.doe@example.com
        phone:
          type: string
          maxLength: 15
          example: "123456789"
        address:
          type: string
          maxLength: 100
          example: Calle Principal 123
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        workExperiences:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperience'
        cv:
          $ref: '#/components/schemas/Resume'

    Candidate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        phone:
          type: string
          example: "123456789"
        address:
          type: string
          example: Calle Principal 123
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        workExperiences:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperience'
        resumes:
          type: array
          items:
            $ref: '#/components/schemas/Resume'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Education:
      type: object
      required:
        - institution
        - title
        - startDate
      properties:
        id:
          type: integer
          example: 1
        institution:
          type: string
          maxLength: 100
          example: Universidad de Madrid
        title:
          type: string
          maxLength: 250
          example: Ingeniería Informática
        startDate:
          type: string
          format: date
          example: "2010-09-01"
        endDate:
          type: string
          format: date
          example: "2014-06-30"
        candidateId:
          type: integer
          example: 1

    WorkExperience:
      type: object
      required:
        - company
        - position
        - startDate
      properties:
        id:
          type: integer
          example: 1
        company:
          type: string
          maxLength: 100
          example: Coca Cola
        position:
          type: string
          maxLength: 100
          example: Desarrollador de Software
        description:
          type: string
          maxLength: 200
          example: Desarrollo de aplicaciones web
        startDate:
          type: string
          format: date
          example: "2015-01-15"
        endDate:
          type: string
          format: date
          example: "2018-12-31"
        candidateId:
          type: integer
          example: 1

    Resume:
      type: object
      required:
        - filePath
        - fileType
      properties:
        id:
          type: integer
          example: 1
        filePath:
          type: string
          example: uploads/1715760936750-cv.pdf
        fileType:
          type: string
          example: application/pdf
        uploadDate:
          type: string
          format: date-time
        candidateId:
          type: integer
          example: 1

    Application:
      type: object
      properties:
        id:
          type: integer
          example: 1
        positionId:
          type: integer
          example: 1
        candidateId:
          type: integer
          example: 1
        applicationDate:
          type: string
          format: date-time
        currentInterviewStep:
          type: integer
          example: 2
        notes:
          type: string
          example: Candidato prometedor
        modifiedById:
          type: integer
          example: 1
        interviewStep:
          $ref: '#/components/schemas/InterviewStep'
        candidate:
          $ref: '#/components/schemas/Candidate'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    InterviewStep:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Primera entrevista
        interviewFlowId:
          type: integer
          example: 1
        interviewTypeId:
          type: integer
          example: 1
        orderIndex:
          type: integer
          example: 1

    Error:
      type: object
      properties:
        error:
          type: string
          example: Datos inválidos
        message:
          type: string
          example: El campo email es obligatorio

